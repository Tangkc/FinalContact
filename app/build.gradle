apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:23.3.0'
    }
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    def baseDependencies = rootProject.ext.baseDependencies
    def baseTestDependencies = rootProject.ext.baseTestDependencies


    compile project(':contact')

    compile baseDependencies.okHttpLogging
    compile baseDependencies.gson
    compile baseDependencies.rxJava
    compile baseDependencies.rxAndroid
    compile baseDependencies.androidAnnotations
    compile baseDependencies.recyclerView
    compile baseDependencies.rxJava
    compile baseDependencies.rxAndroid
    compile baseDependencies.jcbase
    compile baseDependencies.jcconfig
    compile baseDependencies.login


    androidTestCompile baseTestDependencies.junit
    androidTestCompile baseTestDependencies.assertj
    androidTestCompile baseTestDependencies.mockito
    androidTestCompile baseTestDependencies.robolectric
    androidTestCompile baseTestDependencies.junit
    androidTestCompile baseTestDependencies.mockito


    androidTestCompile baseTestDependencies.mockito
    androidTestCompile baseTestDependencies.dexmaker
    androidTestCompile baseTestDependencies.dexmakerMockito
    androidTestCompile baseTestDependencies.espresso
    androidTestCompile baseTestDependencies.espressoIntent
    androidTestCompile baseTestDependencies.espressoContrib

//  androidTestCompile baseTestDependencies.testingSupportLib
    androidTestCompile baseTestDependencies.runner
    androidTestCompile baseTestDependencies.rules
    androidTestCompile baseTestDependencies.androidAnnotations
}